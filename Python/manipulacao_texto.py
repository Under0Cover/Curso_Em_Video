"""MANIPULANDO TEXTOS EM PYTHON

---- TEORIA ----

-- ENTENDENDO UMA CADEIA DE CARACTERES --
CADEIA DE CARACTERES TAMBÉM É CHAMADA DE STRING
OU CADEIA DE TEXTO
FRASE EXEMPLO: Curso em Video Python
PARA O PYTHON TODA CADEIA DE CARACTRES ESTÁ EM ASPAS SIMPLES OU DUPLAS

MODOS DE MANIPULAR ESSA CADEIA DE CARACTERES

FRASE = 'Curso em Video Python'
O PYTHON ALOCA ESSA STRING EM MINI ESPAÇOS DENTRO DA MEMÓRA DO COMPUTADOR
E OS ESPAÇOS COLOCADOS DENTRO DA STRING TAMBÉM SÃO ARMAZENADOS
CADA UM DOS CARACTERES VAI RECEBER UM ÍNDICE QUE COMEÇA EM 0 E VAI ATÉ O TAMANHO DA STRING
NO NOSSO CASO A STRING VAI RECEBER DE 0 ATÉ 20
CONFIGURANDO 21 MINI ESPAÇOS NA MEMÓRIA OU CARACTERES
COMO O PYTHON SEPARA ESSES CARACTERES EM MINI ESPAÇOS, ISSO POSSIBILITA A MANIPULAÇÃO DA STRING

TÉCNICA DE FATIAMENTO
EXEMPLOS:

FATIAR SIGINIFICA PEGAR PEQUENOS PEDAÇOS DA STRING

FRASE[9]:
SE O PRINT FOR DADO COMO: PRINT(FRASE), O RETORNO SERÁ A FRASE INTEIRA
SE O PRINT FOR DADO COMO: PRINT(FRASE[9]), O RETORNO SERÁ O CARACTER 9, OU SEJA, 'V'

--- ATENÇÃO ---
O PYTHON DIFERENCIA MAISCÚLAS DE MINÚSCULAS
---         ---

FRASE[9:13]
O RETORNO SERÁ OS CARACTERES DE 9 ATÉ 12
SEMPRE ELE RETORNA UM A MENOS NO FINAL
O RETORNO SERÁ: 'Vide'
NOS NÚMEROS SELECIONADOS ELE VAI PEGAR O NÚMERO 9 ATÉ O NÚMERO 12, O 13 ELE NÃO BUSCA
É COMO SE FOSSE O PONTO FINAL, "CHEGOU E NÃO SAI MAIS"
--- SIMPLIFICANDO: O ÚLTIMO NÚMERO NÃO ENTRA NA SELEÇÃO ---

FRASE[9:21]
MESMO QUE A STRING NÃO TENHA A 21º POSIÇÃO, ELE SÓ RETORNARÁ ATÉ O 20
O RETORNO SERÁ: 'Video Python'

FRASE[9:21:2]
O RETORNO SERÁ OS CARACTERES 9 ATÉ 21, PULANDO 2 CASAS
O RETORNO SERÁ: 'VdoPto'

FRASE[:5]
QUANDO EU ESCONDO O ÍNDICE INICIAL, ELE MOSTRA DO ÍNDICE 0 ATÉ 0 ÍNDICE 4, JÁ QUE O ÍNDICE FINAL NÃO É CONSIDERADO
O RETORNO SERÁ:'Curso'

FRASE[15:]
QUANDO EU ESCONDO O ÍNDICE FINAL, ELE MOSTRA DO ÍNDICE SELECIONADO, 15 NO CASO, ATÉ O FINAL DA STRING.
NO NOSSO EXEMPLO ATÉ O ÍNDICE 20
O RETORNO SERÁ: 'Python'
*** É COMO SE VOCÊ NÃO SOUBESSE O FINAL ***

FRASE[9::3]
NESSE CASO, EU CONTÍNUO ESCONDENDO O FINAL DA STRING
O PROGRAMA ME RETORNARÁ DO ÍNDICE 9 ATÉ O FINAL, VISTO QUE O ÚLTIMO ÍNDICE ESTÁ ESCONDIDO
PULANDO DE 3 EM 3
O RETORNO SERÁ: 'VePh'

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
RESUMINDO A TÉCNICA DE FATIAMENTO:
VARIÁVEL[VALOR DO ÍNDICE INICIAL:VALOR DO ÍNDICE FINAL:VALOR DE SALTOS]
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

ANÁLISE DE STRING

ANÁLISE NADA MAIS É DO QUE REALMENTE ANALIZAR A STRING E VERIFICAR AS INFORMAÇÕES QUE SE BUSCA
QUAL O TAMANHO DA STRING?
QUAL A PRIMEIRA LETRAS?
QUAIS LETRAS COMPÕE A STRING?
ENTRE OUTRAS COISAS

EXEMPLOS:

-- len(frase): QUAL O COMPRIMENTO DE FRASE?
R-> 21 ÍNDICES

-- frase.count('o'): QUANTAS VEZES APARECE A LETRA O MINÚSCULA?
R-> 3 VEZES
OBS: O O DEVE ESTAR ENTRE ASPAS PARA SER RECONHECIDO COMO ELEMENTO DO ÍNDICE
CASO NÃO ESTEJA O PYTHON ACREDITARÁ QUE É UMA FUNÇÃO
O O PODE SER SUBSTÍTUIDO POR QUALQUER LETRA

-- frase.count('o',0,13): QUANTAS VEZES A LETRA O MINÚSCULA APARECE DO ÍNDICE 0 ATÉ O ÍNDICE 12?
R-> 1
ESSE TIPO DE EXEMPLO É UMA ANÁLISE COM FATIAMENTO
E NO FATIAMENTO O ÚLTIMO ÍNDICE NÃO É CONSIDERADO

-- frase.find('deo'): EXISTE deo NA FRASE?
R-> SIM, ÍNDICE 11 (INÍCIO)
CONTRAFRASEANDO....
-- frase.find('Android'): EXISTE Android NA FRASE?
R-> NÃO
RETORNO: -1
*** QUANDO NÃO HÁ O OBJETO DE PROCURA O RETORNO É -1, PORQUE NÃO EXISTE ÍNDICE -1

-- 'Curso' in frase: EXISTE Curso NA FRASE?
R-> TRUE
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
RESUMINDO A ANÁLISE DE STRING:
DIFERENTE DA TÉCNICA DE FATIAMENTO, ONDE VOCÊ INDICAVA ONDE GOSTARIA DE VER A STRING
A ANÁLISE VOCÊ TRABALHAR MAIS COM O ALFABETO
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

TRANSFORMAÇÃO
EU CONSIGO FAZER A TRANSFORMAÇÃO DA STRING ATRÁVEZ DE MÉTODOS

-- frase.replace('Python', 'Android')
SUBSTITUA A PALAVRA Python, POR Android
RETORNO: 'Curso em Video Android'

-- frase.upper()
UPPER SIGNIFICA MAISCÚLAS, OU SEJA O MÉTODO VAI COLOCAR TODAS AS LETRAS EM MAISCÚLAS
RETORNO: 'CURSO EM VIDEO PYTHON'

-- frase.lower()
COMO ERA DE SE ESPERAR; LOWER SIGNIFICA MINÚSCULAS....
ENTÃO.... TUDO MINÚSCULAS
RETORNO: 'curso em video python'

-- frase.capitalizer()
CAPITALIZE ELE VAI COLOCAR (OU MANTER) APENAS A PRIMEIRA LETRA DA STRING COMO MAISCÚLA
RETORNO: 'Curso em video python'

-- frase.title()
O TITLE É O CAPITALIZE DE TODAS AS PALAVRAS
ELE VAI COLOCAR (OU MANTER) A PRIMEIRA LETRA DE TODAS AS PALAVRAS EM MAISCÚLAS
COMO ELE CONSEGUE ISSO? QUANTAS PALAVRAS ELE SABE QUE TEM?
ELE VAI SE BASEAR PELOS ESPAÇOS NA STRING
RETORNO: 'Curso Em Video Python'

VAMOS MUDAR A FRASE PARA CONTEXTOS DIDÁTICOS
NOVA FRASE: '   Aprenda Python  '
NO CASO AQUI, TEM 3 ESPAÇOS ANTES E 2 DEPOIS DO NECESSÁRIO
PARA SE RESOLVER CASOS COMO ESSES TEMOS 3 TIPOS DE MÉTODOS:
    
-- frase.strip()
VAI REMOVER OS ESPAÇOS DESNECESSÁRIOS TANTO NO COMEÇO QUANTO NO FIM DA STRING
RETORNO: 'Aprenda Python'

-- frase.rstrip()
VAI REMOVER OS ESPAÇOS DO LADO DIREITO DA STRING
RETORNO: '   Aprenda Python'

-- frase.lstrip()
VAI REMOVER OS ESPAÇOS DO LADO ESQUERDO DA STRING
RETORNO: 'Aprenda Python  '

EM TODOS OS CASOS, OS NÚMEROS DOS ÍNDICES SERÃO TODOS REMARCADOS

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
RESUMINDO A TÉCNICA DE TRANSFORMAÇÃO:
NESSA TÉCNICA VOCÊ PODE MANIPULAR OS VALORES DA STRING
É COMO SE AS DUAS TÉCNICAS ANTERIORES VOCÊ ESTIVESSE BUSCANDO INFORMAÇÕES
E NESSA TÉCNICA SERIA ONDE VOCÊ REALEMENTE FARIA MUDANÇAS
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

TÉCNICA DE DIVISÃO
EU CONSIGO FAZER A DIVISÃO DA STRING ATRÁVEZ DE MÉTODOS

VONTANDO A USAR A FRASE: 'Curso em Video Python'

-- frase.split()
O MÉTODO VAI DIVIDIR A STRING EM VÁRIAS OUTRAS STRINGS
COMO? SE BASEANDO PELOS ESPAÇOS NA STRING
RETORNO: 'Curso' 'em' 'Video' 'Python'
OBVIAMENTE, TODA VEZ QUE A STRING FOR DIVIDA, OS ÍNDICES VOLTAM A ZERO
TECNICAMENTE FALANDO, O SPLIT FORMA UMA LISTA DE PALAVRAS
CADA PALAVRA VAI TER SEU ÍNDICE COMO UM TODO

TÉCNICA DE JUNÇÃO
EU CONSIGO FAZER A JUNÇÃO DE VÁRIAS STRINGS

'-'.join(frase)
O JOIN VAI GERAR UMA CADEIA DE CARACTERES, UTILIZANDO O - COMO JUNÇÃO
RETORNO: 'Curso-em-Video-Python'
PODERIA TER USADO O ESPAÇO EM BRANCO? SIM, PODERIA!
O NÚMERO DOS ÍNDICES PASSA A SER SEQUENCIAL NOVAMENTE """

